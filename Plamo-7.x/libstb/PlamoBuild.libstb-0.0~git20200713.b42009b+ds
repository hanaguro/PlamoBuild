#!/bin/sh
##############################################################
pkgbase="libstb"
vers="0.0~git20200713.b42009b+ds"
url="http://archive.ubuntu.com/ubuntu/pool/universe/libs/libstb/libstb_0.0~git20200713.b42009b+ds.orig.tar.xz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="libstb-0.0~git20200713.b42009b+ds"
OPT_CONFIG="--disable-static --enable-shared"
DOCS="LICENSE README.md docs"
patchfiles="0001-Makefile-refactor.patch 0002-Mask-out-rectangle-packing-replacement-in-stb_truety.patch 0003-stb.h-fix-pointer-detection.patch 0004-stb_c_lexer.h-exit-on-error.patch 0005-stb_sprintf.h-fix-pointer-detection.patch 0006-tests-Makefile-refactor.patch 0007-tests-image_test.c-use-library.patch 0008-tests-image_write_test.c-use-library.patch"
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

export CC=gcc
export CXX=g++

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

#    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
#    export LDFLAGS='-Wl,--as-needed' 
#    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
#    if [ $? != 0 ]; then
#        echo "configure error. $0 script stop"
#        exit 255
#    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
