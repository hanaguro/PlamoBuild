#!/bin/sh
##############################################################
pkgbase='icu'
vers='63.1'
url="http://download.icu-project.org/files/icu4c/${vers}/icu4c-${vers/./_}-src.tgz"
digest="md5sum:9e40f6055294284df958200e308bce50"
arch=`uname -m`
build=B1
src="icu"
OPT_CONFIG='--disable-static --enable-shared'
DOCS='LICENSE license.html readme.html'
patchfiles=''
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh
export CC='gcc -m32'
export CXX='g++ -m32'
libdir='lib32'

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
    tar xvf ${url##*/}
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    if [ ! -f .glibc-2.26.patch ]; then
	sed -i 's/xlocale/locale/' source/i18n/digitlst.cpp
	touch .glibc-2.26.patch
    fi

    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/source/configure --prefix=/usr --libdir=/usr/lib32 --includedir=/usr/include32 --bindir=/usr/bin32 --sbindir=/usr/sbin32 --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  src=${pkgbase}-${vers}
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../${pkgbase}_32-$vers-$arch-$build.$compress <<EOF
y
1
EOF

fi
