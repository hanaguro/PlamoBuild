#!/bin/sh
##############################################################
pkgbase="openjdk"
vers="22.0.1_8"
url="https://github.com/openjdk/jdk22u/archive/jdk-22.0.1+8.tar.gz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="jdk22u-jdk-22.0.1-8"
OPT_CONFIG="--disable-static --enable-shared"
DOCS="ADDITIONAL_LICENSE_INFO LICENSE README.md doc"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources

    wget --timestamping https://download.java.net/java/GA/jdk22.0.2/c9ecb94cd31b495da20a27d4581645e8/9/GPL/openjdk-22.0.2_linux-x64_bin.tar.gz
    tar xvf openjdk-22.0.2_linux-x64_bin.tar.gz
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export JAVA_HOME="$W/jdk-22.0.2"
    export PATH=$JAVA_HOME/bin:$PATH
    bash configure --with-version-build="8" --with-version-pre="" --with-version-opt="" --with-stdc++lib=dynamic --with-libjpeg=system --with-libpng=system --with-lcms=system --with-zlib=system --with-harfbuzz=system --with-jvm-features="zgc,shenandoahgc" --with-native-debug-symbols=internal --enable-unlimited-crypto --disable-warnings-as-errors --with-vendor-name="Plamo Linux" 

    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make 
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

#  export LDFLAGS='-Wl,--as-needed'
#  make install DESTDIR=$P

  cd $B/build/linux-x86_64-server-release/jdk

  jvmdir=/usr/java/jdk-22.0.1
  install -dm 755 "$P$jvmdir"

  cp -a bin include lib release "$P$jvmdir"

  # Conf
  install -dm 755 "$P/etc"
  cp -r conf "$P/etc/java-openjdk"
  ln -s /etc/java-openjdk "$P/$jvmdir/conf"

  # Man pages
  for f in bin/*; do
    f=$(basename "${f}")
    man=../jdk/man/man1/"${f}.1"
    test -f "${_man}" && install -Dm 644 "$man" "$P/usr/share/man/man1/${f}-openjdk22.1"
  done
  ln -s /usr/share/man "$P/$jvmdir/man"

  # Link JKS keystore from ca-certificates-utils
  rm -f "$P$jvmdir/lib/security/cacerts"
  ln -sf /etc/ssl/certs/java/cacerts "$P$jvmdir/lib/security/cacerts"

  # Icons
  for s in 16 24 32 48; do
    install -Dm 644 \
      "$S/src/java.desktop/unix/classes/sun/awt/X11/java-icon${s}.png" \
      "$P/usr/share/icons/hicolor/${s}x${s}/apps/java-openjdk.png"
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
