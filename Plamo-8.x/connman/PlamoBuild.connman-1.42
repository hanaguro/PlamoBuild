#!/bin/sh
##############################################################
pkgbase="connman"
vers="1.42"
url="https://git.kernel.org/pub/scm/network/connman/connman.git/snapshot/connman-1.42.tar.gz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="connman-1.42"
OPT_CONFIG="--disable-static --enable-shared --enable-wifi --disable-iwd"
DOCS="AUTHORS COPYING ChangeLog HACKING INSTALL NEWS README TODO doc"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    ./bootstrap

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P
  mkdir -p $P/etc/rc.d/init.d
cat <<"EOF" > $P/etc/rc.d/init.d/connmand
#!/bin/sh
. /lib/lsb/init-functions

case "$1" in
   start)
      log_info_msg "Starting connmand..."
      /usr/sbin/connmand
      evaluate_retval
      ;;

   stop)
      log_info_msg "Stopping connmand..."
      killall connmand
      evaluate_retval
      ;;

   restart)
      $0 stop
      sleep 1
      $0 start
      ;;
   *)
      echo "Usage: $0 {start|stop|restart}"
      exit 1
      ;;
esac

# End /etc/init.d/connmand
EOF

  chmod +x $P/etc/rc.d/init.d/connmand

  for i in $(seq 0 6)
  do
      install -dm755 -v $P/etc/rc.d/rc"$i".d
      case $i in
          0|1|2|6) ln -sf ../init.d/connmand $P/etc/rc.d/rc"$i".d/K69connmand ;;
          3|4|5)   ln -sf ../init.d/connmand $P/etc/rc.d/rc"$i".d/S31connmand ;;
      esac
  done



################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
