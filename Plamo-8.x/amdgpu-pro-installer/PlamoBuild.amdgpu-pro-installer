#!/bin/sh
##############################################################
pkgbase="amdgpu_pro_installer"
vers="$(date +%Y%m%d)"
url="input source code url here"
verify=""
digest=""
arch=`uname -m`
build=B1
src="amdgpu-pro-installer"
OPT_CONFIG="--disable-static --enable-shared"
DOCS=""
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
major=23.10
major_short=23.10
minor=1610704
ubuntu_ver=22.04
repo_folder_ver=5.5.2
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources

    wget -nc https://raw.githubusercontent.com/Ashark/archlinux-amdgpu-pro/master/progl
	wget -nc https://raw.githubusercontent.com/Ashark/archlinux-amdgpu-pro/master/progl.bash-completion
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/a/amf-amdgpu-pro/amf-amdgpu-pro_1.4.30-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/liba/libamdenc-amdgpu-pro/libamdenc-amdgpu-pro_1.0-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libegl1-amdgpu-pro-oglp_${major_short}-${minor}.${ubuntu_ver}_i386.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libegl1-amdgpu-pro-oglp_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgl1-amdgpu-pro-oglp-dri_${major_short}-${minor}.${ubuntu_ver}_i386.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgl1-amdgpu-pro-oglp-dri_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgl1-amdgpu-pro-oglp-ext_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgl1-amdgpu-pro-oglp-gbm_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgl1-amdgpu-pro-oglp-glx_${major_short}-${minor}.${ubuntu_ver}_i386.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgl1-amdgpu-pro-oglp-glx_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgles1-amdgpu-pro-oglp_${major_short}-${minor}.${ubuntu_ver}_i386.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgles1-amdgpu-pro-oglp_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgles2-amdgpu-pro-oglp_${major_short}-${minor}.${ubuntu_ver}_i386.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/o/oglp-amdgpu-pro/libgles2-amdgpu-pro-oglp_${major_short}-${minor}.${ubuntu_ver}_amd64.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/v/vulkan-amdgpu-pro/vulkan-amdgpu-pro_${major_short}-${minor}.${ubuntu_ver}_i386.deb
    wget -nc https://repo.radeon.com/amdgpu/${repo_folder_ver}/ubuntu/pool/proprietary/v/vulkan-amdgpu-pro/vulkan-amdgpu-pro_${major_short}-${minor}.${ubuntu_ver}_amd64.deb

	sed -i -E "s/#\s+export LIBGL_DRIVERS_PATH/    export LIBGL_DRIVERS_PATH/" progl

fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

#    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
#    export LDFLAGS='-Wl,--as-needed' 
#    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
#    export LDFLAGS='-Wl,--as-needed'
#    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
#  cd $B

#  export LDFLAGS='-Wl,--as-needed'
#  make install DESTDIR=$P

    cd $W
	for i in *.deb
	do
#        tmpdir="$(basename "$i")_dir"
#        rm -Rf "$tmpdir"
#        mkdir "$tmpdir"
#        cd "$tmpdir"
        cd $P
        ar x "$W/$i"
        tar xvf data.tar.xz
		rm control.tar.xz  data.tar.xz  debian-binary 
    done

	if [ ! -d $P/usr/lib ];then
	    mkdir -p $P/usr/lib
	fi

	if [ ! -d $P/usr/lib32 ];then
	    mkdir -p $P/usr/lib32
	fi

#	rm -r $P/usr/lib/i386-linux-gnu/dri/
#	rm -r $P/usr/lib/x86_64-linux-gnu/dri/

	mv "$P"/opt/amdgpu-pro/lib/x86_64-linux-gnu/ "$P"/usr/lib/amdgpu-pro/
    mv "$P"/opt/amdgpu-pro/lib/i386-linux-gnu/ "$P"/usr/lib32/amdgpu-pro/
	mv "$P"/opt/amdgpu/lib/x86_64-linux-gnu/* "$P"/usr/lib/
    mv "$P"/opt/amdgpu/lib/i386-linux-gnu/* "$P"/usr/lib32/
#   mv "$P"/usr/lib/x86_64-linux-gnu/* "$P"/usr/lib/
#    mv "$P"/usr/lib/i386-linux-gnu/* "$P"/usr/lib32/
#	rm $P/usr/lib/i386-linux-gnu/dri/amdgpu_dri.so
#	rm $P/usr/lib/x86_64-linux-gnu/dri/amdgpu_dri.so
	mv "$P"/opt/amdgpu-pro/lib/xorg/ "$P"/usr/lib/amdgpu-pro/xorg/
    mv "$P"/opt/amdgpu/share/drirc.d "$P"/usr/share/drirc.d
    install -Dm755 "$W"/progl "$P"/usr/bin/progl
    install -Dm644 "$W"/progl.bash-completion "$P"/usr/share/bash-completion/completions/progl
    mkdir -p "$P"/usr/share/vulkan/icd.d/
    mv "$P"/opt/amdgpu-pro/etc/vulkan/icd.d/amd_icd64.json "$P"/usr/share/vulkan/icd.d/amd_pro_icd64.json
    mv "$P"/usr/lib/amdgpu-pro/amdvlk64.so "$P"/usr/lib/amdvlkpro64.so
    sed -i "s#/opt/amdgpu-pro/lib/x86_64-linux-gnu/amdvlk64.so#/usr/lib/amdvlkpro64.so#" "$P"/usr/share/vulkan/icd.d/amd_pro_icd64.json
    mkdir -p "$P"/usr/share/vulkan/icd.d/
    mv "$P"/opt/amdgpu-pro/etc/vulkan/icd.d/amd_icd32.json "$P"/usr/share/vulkan/icd.d/amd_pro_icd32.json
    mv "$P"/usr/lib32/amdgpu-pro/amdvlk32.so "$P"/usr/lib32/amdvlkpro32.so
    sed -i "s#/opt/amdgpu-pro/lib/i386-linux-gnu/amdvlk32.so#/usr/lib32/amdvlkpro32.so#" "$P"/usr/share/vulkan/icd.d/amd_pro_icd32.json

    find $P -type d -empty -delete

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
