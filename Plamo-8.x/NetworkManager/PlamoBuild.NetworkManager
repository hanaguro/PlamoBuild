#!/bin/sh
##############################################################
pkgbase="NetworkManager"
vers="$(date +%Y%m%d)"
url="https://gitlab.freedesktop.org/NetworkManager/NetworkManager.git"
verify=""
digest=""
arch=`uname -m`
build=B1
src="NetworkManager"
OPT_CONFIG="--buildtype=release -Dsystemdsystemunitdir=disable -Dsession_tracking=elogind -Dsuspend_resume=elogind -Dselinux=false -Dlibaudit=no -Dppp=false -Dmodem_manager=false -Dqt=false -Diwd=true -Dconfig_wifi_backend_default=iwd -Dwifi=true -Dwext=true"
DOCS="AUTHORS COPYING COPYING.GFDL COPYING.LGPL ChangeLog MAINTAINERS MAINTAINERS.md NEWS README.md RELICENSE.md TODO docs"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    meson --prefix=/usr --libdir=/usr/${libdir} ${OPT_CONFIG} $S  
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    ninja
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  DESTDIR=$P ninja install

  install -dm755 -v $P/etc/rc.d/init.d
cat <<"EOF" > $P/etc/rc.d/init.d/NetworkManager
#!/bin/sh
. /lib/lsb/init-functions

case "$1" in
   start)
      log_info_msg "Starting NetworkManager..."
	  /usr/sbin/NetworkManager
      evaluate_retval
      ;;

   stop)
      log_info_msg "Stopping NetworkManager..."
	  killproc -p "/var/run/NetworkManager/NetworkManager.pid" /usr/sbin/NetworkManager 2> /dev/null 
      evaluate_retval
      ;;

   restart)
      $0 stop
      sleep 1
      $0 start
      ;;
   *)
      echo "Usage: $0 {start|stop|restart}"
      exit 1
      ;;
esac

# End /etc/init.d/NetworkManager
EOF

  chmod +x $P/etc/rc.d/init.d/NetworkManager

  for i in $(seq 0 6)
  do
      install -dm755 -v $P/etc/rc.d/rc"$i".d
      case $i in
          0|1|2|6) ln -sf ../init.d/NetworkManager $P/etc/rc.d/rc"$i".d/K00NetworkManager ;;
          3|4|5)   ln -sf ../init.d/NetworkManager $P/etc/rc.d/rc"$i".d/S99NetworkManager ;;
      esac
  done

  install -dm755 -v $P/etc/polkit-1/rules.d
cat <<"EOF" > $P/etc/polkit-1/rules.d/50-org.freedesktop.NetworkManager.rules
polkit.addRule(function(action, subject) {
    if (action.id.indexOf("org.freedesktop.NetworkManager.") == 0 &&
subject.isInGroup("network")) {
        return polkit.Result.YES;
    }
});
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
