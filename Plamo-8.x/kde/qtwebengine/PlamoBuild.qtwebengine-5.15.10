#!/bin/sh
##############################################################
pkgbase="qtwebengine"
vers="5.15.10"
url="https://invent.kde.org/qt/qt/qtwebengine.git"
#url="http://code.qt.io/qt/qtwebengine.git"
#url="https://download.qt.io/archive/qt/5.15/5.15.10/submodules/qtwebengine-everywhere-opensource-src-5.15.10.tar.xz"
verify=""
digest=""
arch=`uname -m`
build=B1
#src="qtwebengine-everywhere-src-5.15.10"
src="qtwebengine"
OPT_CONFIG="--disable-static --enable-shared"
DOCS=".QT-ENTERPRISE-LICENSE-AGREEMENT LICENSE.Chromium LICENSE.FDL LICENSE.GPL2 LICENSE.GPL3 LICENSE.GPL3-EXCEPT LICENSE.GPLv3 LICENSE.LGPL3 LICENSE.LGPLv3 config_help.txt"
patchfiles=" qt5-webengine-chromium-python3.patch qt5-webengine-pipewire-0.3.patch qt5-webengine-ffmpeg5.patch qt5-webengine-python3.patch system-ffmpeg-5.patch"
#patchfiles=" qt5-webengine-chromium-python3.patch qt5-webengine-pipewire-0.3.patch qt5-webengine-python3.patch "
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
commitid1="v5.15.10-lts"
commitid="v5.15.15-lts"
##############################################################

source /usr/share/plamobuild_functions.sh
#export PATH=/opt/python2/bin:$PATH
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/python2/lib

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)
B=$PWD/build

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
	cd $W
#	git clone https://code.qt.io/qt/qtwebengine-chromium.git
    git clone https://invent.kde.org/qt/qt/qtwebengine-chromium.git
	cd $S
	git submodule init
	git submodule set-url src/3rdparty "$W"/qtwebengine-chromium
    git submodule set-branch --branch 87-based src/3rdparty
	git -c protocol.file.allow=always submodule update
	git checkout $commitid1
	git cherry-pick f0120e41
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cd $B
    for patch in $patchfiles ; do
       if [ $patch = "qt5-webengine-chromium-python3.patch" ];then 
          patch -d src/3rdparty -p1 < $W/$patch
	   elif [ $patch = "qt5-webengine-ffmpeg5.patch" ];then 
          patch -d src/3rdparty -p1 < $W/$patch
	   elif [ $patch = "qt5-webengine-pipewire-0.3.patch" ];then 
          patch -d src/3rdparty -p1 < $W/$patch
	   elif [ $patch = "gcc13.patch" ];then 
          patch -d src/3rdparty -p1 < $W/$patch
	   else
		  patch -p1 < $W/$patch
	   fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
#    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    qmake . -- -proprietary-codecs -system-ffmpeg -webp -spellchecker -webengine-icu -webengine-kerberos -webengine-webrtc-pipewire
#    qmake .
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install INSTALL_ROOT=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
