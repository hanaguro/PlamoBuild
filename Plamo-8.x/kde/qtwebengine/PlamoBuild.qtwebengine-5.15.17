#!/bin/sh
##############################################################
pkgbase="qtwebengine"
vers="5.15.17"
url="https://anduin.linuxfromscratch.org/BLFS/qtwebengine/qtwebengine-5.15.17.tar.xz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="qtwebengine-5.15.17"
OPT_CONFIG="--disable-static --enable-shared"
DOCS="LICENSE.Chromium LICENSE.FDL LICENSE.GPL2 LICENSE.GPL3 LICENSE.GPL3-EXCEPT LICENSE.GPLv3 LICENSE.LGPL3 LICENSE.LGPLv3 config_help.txt"
patchfiles="qtwebengine-5.15.17-build_fixes-1.patch"
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

B=$W/build

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources

    git clone https://invent.kde.org/qt/qt/qtwebengine-chromium.git 
    cd qtwebengine-chromium
    git checkout 87-based
    cd $S/src/3rdparty/
    rm -rf chromium
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  source copy build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ;  cp -a $S $B  
    cp -a $W/qtwebengine-chromium/chromium $B/src/3rdparty/
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done

    mkdir -pv .git src/3rdparty/chromium/.git
    sed -e '/^MODULE_VERSION/s/5.*/5.15.11/' -i .qmake.conf
    find -type f -name "*.pr[io]" |
        xargs sed -i -e 's|INCLUDEPATH += |&$$QTWEBENGINE_ROOT/include |'
    sed -e '/link_pulseaudio/s/false/true/' \
        -i src/3rdparty/chromium/media/media_options.gni
    sed -e 's/\^(?i)/(?i)^/' \
        -i src/3rdparty/chromium/tools/metrics/ukm/ukm_model.py &&
    sed -e "s/'rU'/'r'/" \
        -i src/3rdparty/chromium/tools/grit/grit/util.py
    sed -e /six.move/d \
        -i src/3rdparty/chromium/third_party/protobuf/python/google/protobuf/internal/python_message.py &&
    rm -r src/3rdparty/chromium/tools/grit/third_party/six
    sed -i 's/NINJAJOBS/NINJA_JOBS/' src/core/gn_run.pro

    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
#    ./configure --prefix=/usr --libdir=/usr/${libdir} --sysconfdir=/etc --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
    qmake . -- -proprietary-codecs -webengine-icu 
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install INSTALL_ROOT=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
