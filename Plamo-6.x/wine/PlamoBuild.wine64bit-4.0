#!/bin/sh
##############################################################
pkgbase='wine64bit'
vers='4.0'
url="https://sourceforge.net/projects/wine/files/Source/${pkgbase}-${vers}.tar.xz"
verify=""
arch=`uname -m`
build=T1
src="wine-${vers}"
OPT_CONFIG='--with-xml --with-gettext --with-alsa --enable-win64'
DOCS='AUTHORS COPYING.LIB LICENSE LICENSE.OLD MAINTAINERS README'
patchfiles='150654'
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

B=$W/build

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done

  # if [ ! -f configure ] ; then
  #   if [ -f autogen.sh ] ; then
  #     sh ./autogen.sh
  #     make distclean
  #   fi
  # fi
 
  cd $B
#  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/share/pkgconfig
  export LDFLAGS='-Wl,--as-needed'
  $S/configure --prefix=/usr/wine-64bit --libdir=/usr/wine-64bit/${libdir} --sysconfdir=/etc/wine-64bit --localstatedir=/var/wine-64bit --mandir=/usr/wine-64bit/share/man ${OPT_CONFIG[$i]}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  cp $W/$0 .
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P
  find $P/usr/lib64 $P/lib64 -type f -name "*.la" -exec rm {} \;

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  mkdir $P/usr/wine-64bit/share/
  cp -r $P/usr/share/doc $P/usr/wine-64bit/share/
  rm -r $P/usr/share/doc
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
